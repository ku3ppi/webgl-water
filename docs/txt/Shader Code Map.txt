  ┌────────────────────────────────────────────────────┐                                                                                                                                                                                                                        
  │WaterVertexShader                                   │                                                                                                                                                                                                                        
  ├────────────────────────────────────────────────────┤                               ┌─────────────────────────────────────────────┐                                                                                              ┌──────────────────────────────────────────┐
  │**Attribute:**                                      │                               │MeshVertexShader                             │                                                                                              │RenderingPasses                           │
  │+ attribute position: vec3                          │                               ├─────────────────────────────────────────────┤                                                                                              ├──────────────────────────────────────────┤
  │                                                    │                               │**Attribute:**                               │                                                                                              │**Refraktion Pass:**                      │
  │**Uniforms:**                                       │                               │+ attribute position: vec3                   │                                                                                              │clipPlane = vec4(0, -1, 0, 0)             │
  │+ uniform perspective: mat4                         │                               │+ attribute normal: vec3                     │   ┌──────────────────────────────────────┐                                                   │→ render terrain below water              │
  │+ uniform model: mat4                               │                               │+ attribute uvs: vec2                        │   │QuadVertexShader                      │                                                   │→ output to refractionTexture             │
  │+ uniform view: mat4                                │                               │                                             │   ├──────────────────────────────────────┤                                                   │                                          │
  │+ uniform cameraPos: vec3                           │                               │**Uniforms:**                                │   │**Attribute:**                        │   ┌───────────────────────────────────────────┐   │**Reflektion Pass:**                      │
  │                                                    │                               │+ uniform perspective: mat4                  │   │+ attribute position: vec2            │   │**Clip Planes:**                           │   │clipPlane = vec4(0, 1, 0, 0)              │
  │**Varyings (Output):**                              │                               │+ uniform view: mat4                         │   │                                      │   ├───────────────────────────────────────────┤   │→ flip view matrix                        │
  │+ varying clipSpace: vec4                           │                               │+ uniform model: mat4                        │   │**Varyings:**                         │   │Positive Y: Alles über Wasser (Reflektion) │---│→ render terrain above water              │
  │+ varying textureCoords: vec2                       │                               │+ uniform clipPlane: vec4                    │   │+ varying textureCoords: vec2         │   │                                           │   │→ output to reflectionTexture             │
  │+ varying fromFragmentToCamera: vec3                │                               │                                             │   │                                      │   └───────────────────────────────────────────┘   │                                          │
  │                                                    │                               │**Varyings (Output):**                       │   │**Berechnung:**                       │                                                   │**Wasser Pass:**                          │
  │**Konstanten:**                                     │                               │+ varying vUvs: vec2                         │   │textureCoords = position * 0.5 + 0.5  │                                                   │→ bind refractionTexture (TEXTURE0)       │
  │+ const tiling: float = 4.0                         │                               │+ varying vNormal: vec3                      │   │gl_Position = vec4(position, 0.0, 1.0)│                                                   │→ bind reflectionTexture (TEXTURE1)       │
  │                                                    │                               │+ varying vWorldPos: vec3                    │   └──────────────────────────────────────┘                                                   │→ bind dudvTexture (TEXTURE2)             │
  │**Berechnungen:**                                   │                               │                                             │                       |                                                                      │→ bind normalMap (TEXTURE3)               │
  │worldPosition = model * vec4(position, 1.0)         │                               │**Clipping:**                                │                       |                                                                      │→ dudvOffset = (time / 1000.0) * waveSpeed│
  │clipSpace = perspective * view * worldPosition      │                               │gl_ClipDistance[0] = dot(worldPos, clipPlane)│                       |                                                                      │→ render water plane                      │
  │textureCoords = (position.xz + 0.5) * tiling        │                               └─────────────────────────────────────────────┘                       |                                                                      └──────────────────────────────────────────┘
  │fromFragmentToCamera = cameraPos - worldPosition.xyz│                                                       |                                             |                                                                                                                  
  └────────────────────────────────────────────────────┘                                                       |                                             |                                                                                                                  
                             |                                                                                 |                                             |                                                                                                                  
                             |                                                                                 |                                             |                                                                                                                  
  ┌─────────────────────────────────────────────────────┐                                                      |                                             |                                                                                                                  
  │WaterFragmentShader                                  │                                                      |                                             |                                                                                                                  
  ├─────────────────────────────────────────────────────┤                                                      |                                             |                                                                                                                  
  │**Textur Samplers:**                                 │                                                      |                                             |                                                                                                                  
  │+ uniform refractionTexture: sampler2D               │                                                      |                                             |                                                                                                                  
  │+ uniform reflectionTexture: sampler2D               │                                                      |                                             |                                                                                                                  
  │+ uniform dudvTexture: sampler2D                     │                                                      |                                             |                                                                                                                  
  │+ uniform normalMap: sampler2D                       │                                                      |                                             |                                                                                                                  
  │+ uniform waterDepthTexture: sampler2D               │                                                      |                                             |                                                                                                                  
  │                                                     │                                                      |                                             |                                                                                                                  
  │**Animation & Eigenschaften:**                       │                                                      |                                             |                                                                                                                  
  │+ uniform dudvOffset: float                          │                                   ┌───────────────────────────────────┐   ┌────────────────────────────────────────────────┐                                                                                          
  │+ uniform waterReflectivity: float                   │                                   │MeshFragmentShader                 │   │QuadFragmentShader                              │                                                                                          
  │+ uniform fresnelStrength: float                     │  ┌────────────────────────────┐   ├───────────────────────────────────┤   ├────────────────────────────────────────────────┤                                                                                          
  │                                                     │  │**Textur Binding:**         │   │**Uniforms:**                      │   │**Uniforms:**                                   │                                                                                          
  │**Varyings (Input):**                                │  ├────────────────────────────┤   │+ uniform tex: sampler2D           │   │+ uniform texture: sampler2D                    │                                                                                          
  │+ varying clipSpace: vec4                            │  │TEXTURE1 → reflectionTexture│   │                                   │   │                                                │                                                                                          
  │+ varying textureCoords: vec2                        │--│TEXTURE2 → dudvTexture      │   │**Varyings (Input):**              │   │**Varyings:**                                   │                                                                                          
  │+ varying fromFragmentToCamera: vec3                 │  │TEXTURE3 → normalMap        │   │+ varying vUvs: vec2               │   │+ varying textureCoords: vec2                   │                                                                                          
  │                                                     │  │TEXTURE4 → waterDepthTexture│   │+ varying vNormal: vec3            │   │                                                │                                                                                          
  │**Konstanten:**                                      │  │                            │   │                                   │   │**Output:**                                     │                                                                                          
  │+ const waterDistortionStrength: float = 0.03        │  └────────────────────────────┘   │**Output:**                        │   │gl_FragColor = texture2D(texture, textureCoords)│                                                                                          
  │+ const shineDamper: float = 20.0                    │                                   │gl_FragColor = texture2D(tex, vUvs)│   └────────────────────────────────────────────────┘                                                                                          
  │                                                     │                                   └───────────────────────────────────┘                                                                                                                                               
  │**Licht Konstanten:**                                │                                                                                                                                                                                                                       
  │+ vec3 sunlightColor = vec3(1.0, 1.0, 1.0)           │                                                                                                                                                                                                                       
  │+ vec3 sunlightDir = normalize(vec3(-1.0, -1.0, 0.5))│                                                                                                                                                                                                                       
  │                                                     │                                                                                                                                                                                                                       
  │**Wasser Farben:**                                   │                                                                                                                                                                                                                       
  │+ vec4 shallowWaterColor = vec4(0.0, 0.1, 0.3, 1.0)  │                                                                                                                                                                                                                       
  │+ vec4 deepWaterColor = vec4(0.0, 0.1, 0.2, 1.0)     │                                                                                                                                                                                                                       
  │                                                     │                                                                                                                                                                                                                       
  │**Funktionen:**                                      │                                                                                                                                                                                                                       
  │+ getNormal(textureCoords): vec3                     │                                                                                                                                                                                                                       
  └─────────────────────────────────────────────────────┘                                                                                                                                                                                                                       
                             |                                                                                                                                                                                                                                                  
┌─────────────────────────────────────────────────────────┐                                                                                                                                                                                                                     
│WaterCalculations                                        │                                                                                                                                                                                                                     
├─────────────────────────────────────────────────────────┤                                                                                                                                                                                                                     
│**NDC Berechnung:**                                      │                                                                                                                                                                                                                     
│ndc = (clipSpace.xy / clipSpace.w) / 2.0 + 0.5           │                                                                                                                                                                                                                     
│                                                         │                                                                                                                                                                                                                     
│**Textur Koordinaten:**                                  │                                                                                                                                                                                                                     
│refractTexCoords = vec2(ndc.x, ndc.y)                    │                                                                                                                                                                                                                     
│reflectTexCoords = vec2(ndc.x, -ndc.y)                   │                                                                                                                                                                                                                     
│                                                         │                                                                                                                                                                                                                     
│**Tiefen Berechnung:**                                   │                                                                                                                                                                                                                     
│near = 0.1, far = 50.0                                   │                                                                                                                                                                                                                     
│cameraToFirstThingUnderWater = 2.0 * near * far / ...    │                                                                                                                                                                                                                     
│angledWaterDepth = underwater - waterDistance            │                                                                                                                                                                                                                     
│                                                         │                                                                                                                                                                                                                     
│**Verzerrung:**                                          │                                                                                                                                                                                                                     
│distortedTexCoords = dudvTexture + dudvOffset            │                                                                                                                                                                                                                     
│totalDistortion = (dudvTexture * 2.0 - 1.0) * strength   │                                                                                                                                                                                                                     
│                                                         │                                                                                                                                                                                                                     
│**Fresnel Effekt:**                                      │                                                                                                                                                                                                                     
│refractiveFactor = dot(toCamera, normal)                 │                                                                                                                                                                                                                     
│refractiveFactor = pow(refractiveFactor, fresnelStrength)│                                                                                                                                                                                                                     
└─────────────────────────────────────────────────────────┘                                                                                                                                                                                                                     
                             |                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                                                
    ┌─────────────────────────────────────────────────┐                                                                                                                                                                                                                         
    │**Fresnel Formel:**                              │                                                                                                                                                                                                                         
    ├─────────────────────────────────────────────────┤                                                                                                                                                                                                                         
    │Je flacher der Blickwinkel, desto mehr Refraktion│                                                                                                                                                                                                                         
    │fresnelStrength = 2.0 für realistische Wasser    │                                                                                                                                                                                                                         
    │                                                 │                                                                                                                                                                                                                         
    └─────────────────────────────────────────────────┘                                                                                                                                                                                                                         
